events {}

http {
    upstream auth_service {
        server auth-service:8080;
    }

    upstream userprofile_service {
        server userprofile-service:8080;
    }

    upstream post_service {
        server post-service:8080;
    }

    server {
        listen 80;

        # Auth Service Routes
        location /auth/ {
            proxy_pass http://auth_service/;
            proxy_set_header Host auth-service;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # User Profile Service Routes
        location /user/ {
            auth_request /validate_token;
            proxy_pass http://userprofile_service/;
            proxy_set_header Host userprofile-service;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Post Service Routes
        location /post/ {
            auth_request /validate_token;
            proxy_pass http://post_service/;
            proxy_set_header Host post-service;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Token validation subrequest
        location = /validate_token {
            internal;
            proxy_pass http://auth_service/validate;
            proxy_set_header Host auth-service;
            proxy_set_header Authorization $http_authorization; 
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
        }

        # Return 401 instead of 403 for failed auth
        error_page 401 = @error401;
        location @error401 {
            return 401 "Unauthorized";
        }
    }
}